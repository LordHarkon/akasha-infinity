{
	// Place your akasha-infinity workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Infinity Command": {
		"prefix": "/infcommand",
		"body": [
			"import { AkashaCommand } from \"#structures/AkashaCommand\";",
			"import { ApplyOptions } from \"@sapphire/decorators\";",
			"import type { AkashaCommandOptions } from \"#typings/index\";",
			"import type { Message } from \"discord.js\";",
			"",
			"@ApplyOptions<AkashaCommandOptions>({",
			"\tname: \"$TM_FILENAME_BASE\",",
			"\texamples: [\"$TM_FILENAME_BASE\"],",
			"\tcooldown: {",
			"\t\tdelay: 1000,",
			"\t},",
			"\tcooldownDelay: 1000,",
			"\trequiredClientPermissions: [],",
			"\trequiredUserPermissions: [],",
			"})",
			"export class ${TM_FILENAME_BASE/(.)/${1:/upcase}/}Command extends AkashaCommand {",
			"\tpublic override async messageRun(message: Message) {",
			"\t\tmessage.channel.send(\"Hello World!\");",
			"\t}",
			"}"
		]
	},
	"Infinity Listener": {
		"prefix": "/inflistener",
		"body": [
			"import { Events, Listener, PieceContext } from \"@sapphire/framework\";",
			"",
			"export class ${TM_FILENAME_BASE/(.)/${1:/upcase}/} extends Listener<typeof Events.${TM_FILENAME_BASE/(.)/${1:/upcase}/}> {",
			"\tpublic constructor(context: PieceContext) {",
			"\t\tsuper(context, {",
			"\t\t\tname: \"$TM_FILENAME_BASE\",",
			"\t\t\tevent: Events.${TM_FILENAME_BASE/(.)/${1:/upcase}/},",
			"\t\t\tonce: false,",
			"\t\t});",
			"\t}",
			"",
			"\tasync run() {}",
			"}"
		]
	}
}
